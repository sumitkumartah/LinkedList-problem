
876. Middle of the Linked List



BRUTE BY COUNTING THE ALL NODE THEN MIDDLE >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>


class Solution {
    public ListNode middleNode(ListNode head) {
        if(head==null || head.next==null) return head;
        ListNode temp=head;
        int n=0;
        while(temp!=null){
            n++;
            temp=temp.next;
        }

        int middle=(n/2)+1;
        temp=head;
        while(temp!=null){
            middle--;
            if(middle==0){
                break;
            }
            temp=temp.next;
        }
        return temp;
    }
}


TC=O(N) + O(N/2)   
SC=O(1)






OPTIMAL APPROACH >>>>>>>>>>>>>>  TORTOISE AND HARE


class Solution {
    public ListNode middleNode(ListNode head) {  //TPRTOISE AND HARE METHOD
        ListNode fast=head;
        ListNode slow=head;
        while(fast!=null && fast.next!=null){
            slow=slow.next;
            fast=fast.next.next;
        }
        return slow;
    }
}



TC=O(N)   
SC=O(1)
