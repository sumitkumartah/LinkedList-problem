2095. Delete the Middle Node of a Linked List


https://leetcode.com/problems/delete-the-middle-node-of-a-linked-list/description/




BRUTE FORCE >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>BY USING LENGTH OF THE LL


class Solution {
    public ListNode deleteMiddle(ListNode head) {
        if(head==null || head.next==null) return null;

        int n=0;
        ListNode temp=head;
        while(temp!=null){
            n++;
            temp=temp.next;
        }
        int beforemiddle=(n/2);

        temp=head;
        while(temp!=null){
            beforemiddle--;
            if(beforemiddle==0){
              temp.next=temp.next.next;
              break;
            }
            temp=temp.next;
        }

        
        return head;
    }
}


TC=O(2N)
SC=O(1)







OPTIMAL SOLUTION >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>BY USING  TORTOISE AND RABIT




class Solution {
    public ListNode deleteMiddle(ListNode head) {
        if(head==null || head.next==null) return null;
        ListNode slow=head;
        ListNode prev=null;
        ListNode fast=head;
        while(fast!=null && fast.next!=null){
            prev=slow;
            slow=slow.next;
            fast=fast.next.next;
        }
        prev.next=prev.next.next;
        return head;
    }
}

TC = O(N) 
SC= O(1)
